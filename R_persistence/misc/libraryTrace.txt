## This file is to trace back version of libraries, and modification in library files


## libraries versions

* GUDHI: 
* Dionysus:
* PHAT: 1.4.1
* CGAL: 4.8
* boost: 1.65.0 (corresponding to BH 1.65.0-1)
* gmp: 4.2.4 (corresponding to http://win-builder.r-project.org/GPLcompliance/ )


## modifications in libraries

# boost

* src/boost/archive/codecvt_null.hpp
  added from boost 1.60 due to bug from version >= 1.61

* src/boost/serialization/singleton.hpp
  added from boost 1.60 due to bug from version >= 1.61

# CGAL

* src/CGAL/Alpha_shape_3.h
  Alpha_shape_3<Dt,EACT>::Classification_type Alpha_shape_3<Dt,EACT>::classify(Alpha_status_const_iterator as, const NT& alpha) const
  resolve reference binding to null pointer: '*as' can fetch NULL memory if 'as' corresponds to NULL pointer

* src/CGAL/Compact_container.h
  bool is_used(const_iterator ptr) const
  bool owns(const_iterator cit) const
  CC_interator(const iterator &)
  CC_iterator & operator=(const iterator &)
  std::size_t hash_value(const CC_iterator<DSC, Const>&  i)
  std::size_t operator()(const CGAL::internal::CC_iterator<DSC, Const>& i) const
  resolve reference binding to null pointer: '*pointer' can fetch NULL memory if 'pointer' corresponds to NULL pointer

* src/CGAL/Concurrent_compact_container.h
  bool is_used(const_iterator ptr) const
  bool owns(const_iterator cit) const
  static Type type(const_iterator ptr)
  CCC_iterator (const iterator &it)
  CCC_iterator & operator= (const iterator &it)
  std::size_t hash_value(const CCC_iterator<CCC, Const>&  i)
  std::size_t operator()(const CGAL::CCC_internal::CCC_iterator<CCC, Const>& i) const
  resolve reference binding to null pointer: '*pointer' can fetch NULL memory if 'pointer' corresponds to NULL pointer

* src/CGAL/TDS_full_cell_default_storage_policy.h
  Xor_type xor_of_vertices(const int cur_dim) const
  Vertex_handle mirror_vertex(const int i, const int cur_dim) const
  resolve reference binding to null pointer: '*vertices_[i]' can fetch NULL memory if 'vertices_[i]' corresponds to NULL pointer

* src/CGAL/Triangulation.h
  bool is_infinite(const Vertex & v) const
  resolve reference binding to null pointer: '*infinite_vertex()' can fetch NULL memory if 'infinite_vertex()' corresponds to NULL pointer

* src/CGAL/Triangulation_ds_cell_base_3.h
  void set_neighbor(int i, Cell_handle n)
  void set_neighbors(Cell_handle n0, Cell_handle n1, Cell_handle n2, Cell_handle n3)
  resolve reference binding to null pointer: '*n' can fetch NULL memory if 'n' corresponds to NULL pointer

* src/CGAL/NewKernel_d/function_objects_cartesian.h
  struct Oriented_side
  CS is the name of Intel CPU registers defined on Solaris

* Below are changes due to updating package RcppEigen to Eigen 3.3.2:
  https://github.com/RcppCore/RcppEigen/issues/41

* src/CGAL/Sqrt_extension/Eigen_NumTraits.h
  line 31: Add one line typedef Real Literal;.

* src/CGAL/Quotient.h
  line 860: Add one line typedef CGAL::Quotient<NT> Literal;.

* src/CGAL/Mpzf.h
  line 1136: Add one line typedef CGAL::Mpzf Literal;.

* src/CGAL/MP_Float.h
  line 889: Add one line typedef CGAL::MP_Float Literal;.

* src/CGAL/Lazy_exact_nt.h
  line 1429: Add one line typedef CGAL::Lazy_exact_nt<ET> Literal;.

* src/CGAL/Interval_nt.h
  line 1269: Add one line typedef CGAL::Interval_nt<b> Literal;.

* src/CGAL/Gmpz.h
  line 216: Add one line typedef CGAL::Gmpz Literal;.

* src/CGAL/Gmpq.h
  line 142: Add one line typedef CGAL::Gmpq Literal;.


# Dionysus

* src/utilities/counter.h (and other places where Count(x) is used)
  replace macro Count() by inline function Count()


# gmp

* src/gmpxx.h
  added from gmp 4.2.4 (corresponding to http://win-builder.r-project.org/GPLcompliance/ )


# GUDHI

* src/gudhi/Alpha_complex.h
  void init(Filtration_value max_alpha_square)
  template<typename Simplex_handle> void propagate_alpha_filtration(Simplex_handle f_simplex, int decr_dim)
  namespace of std::isnan() function is specified

* src/gudhi/Simplex_tree.h
  bool rec_make_filtration_non_decreasing(Siblings * sib)
  line 1172: added this to capture clause in lambda function
