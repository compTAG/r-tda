## This file is to trace back version of libraries, and modification in library files


## libraries versions

* GUDHI: 3.5.0
* Dionysus:
* PHAT: 1.4.1
* CGAL: 5.3.1
* boost: 1.78.0 (corresponding to BH 1.78.0-0)
* gmp: 4.2.4 (corresponding to http://win-builder.r-project.org/GPLcompliance/ )


## modifications in libraries

# boost

* src/boost/serialization/binary_object.hpp
  missing in R package BH

* src/boost/container/detail/copy_move_algo.hpp
  added from R package BH 1.78.0-0 and modified due to [Wclass-memaccess] warning
  typename dtl::enable_if_memtransfer_copy_assignable<I, F, F>::type move_backward(I f, I l, F r)
  F memmove(I f, I l, F r)
  F memmove_n(I f, U n, F r)
  memmove_n_source(I f, std::size_t n, F r)
  memmove_n_source_dest(I f, std::size_t n, F &r)
  static_cast<void *> on the first argument when calling std::memmove( , , )

* src/boost/container/vector.hpp
  src/boost/container/flat_map.hpp
  src/boost/container/detail/flat_tree.hpp
  added from R package BH 1.78.0-0 due to [Wclass-memaccess] warning


# CGAL

* src/CGAL/Alpha_shape_3.h
  Alpha_shape_3<Dt,EACT>::Classification_type Alpha_shape_3<Dt,EACT>::classify(Alpha_status_const_iterator as, const NT& alpha) const
  resolve reference binding to null pointer: '*as' can fetch NULL memory if 'as' corresponds to NULL pointer

* src/CGAL/assertions_impl.h
  add #include <Rcpp.h> for Rcpp::stop, Rcpp::Rcerr
  replace std::cerr by Rcpp::Rcerr

  comment out due to std::cerr, abort(), exit() :
    CGAL_INLINE_FUNCTION  void _standard_warning_handler(const char *, const char* expr, const char* file, int line, const char* msg)
    inline Failure_function& get_static_warning_handler()
    Failure_function _warning_handler
    inline Failure_function& get_static_warning_handler()
    CGAL_INLINE_FUNCTION void precondition_fail(const char* expr, const char* file, int line, const char* msg)
    CGAL_INLINE_FUNCTION void postcondition_fail(const char* expr, const char* file, int line, const char* msg)
    CGAL_INLINE_FUNCTION void warning_fail(const char* expr, const char* file, int line, const char* msg)
    CGAL_INLINE_FUNCTION Failure_function set_error_handler( Failure_function handler)
    CGAL_INLINE_FUNCTION Failure_function set_warning_handler( Failure_function handler)
    CGAL_INLINE_FUNCTION Failure_behaviour set_error_behaviour(Failure_behaviour eb)
    CGAL_INLINE_FUNCTION Failure_behaviour set_warning_behaviour(Failure_behaviour eb)

* src/CGAL/Compact_container.h
  bool is_used(const_iterator ptr) const
  size_type index(const_iterator cit) const
  bool owns(const_iterator cit) const
  std::size_t operator()(const CGAL::internal::CC_iterator<DSC, Const>& i) const
  resolve reference binding to null pointer: '*pointer' can fetch NULL memory if 'pointer' corresponds to NULL pointer

* src/CGAL/Concurrent_compact_container.h
  bool is_used(const_iterator ptr) const
  size_type index(const_iterator cit) const
  bool owns(const_iterator cit) const
  resolve reference binding to null pointer: '*pointer' can fetch NULL memory if 'pointer' corresponds to NULL pointer

* src/CGAL/config.h
  #if __has_cpp_attribute(maybe_unused)
  #if __cpp_attributes >= 200809 && __has_cpp_attribute(fallthrough)
  resolve clang warning: clang15 regards 'maybe_unused' or 'fallthrough' as a C++17 extension [-Wc++17-attribute-extensions]

* src/CGAL/FPU.h
  __m128d swap_m128d(__m128d x)
  resolve debian warning: ISO C++ forbids compound-literals [-Wpedantic]

* src/CGAL/Interval_nt.h
  CGAL_CST_TRUE(X)
  resolve debian warning: ISO C++ forbids braced-groups within expressions [-Wpedantic]

* src/CGAL/MP_float.h
  MP_float(long i)
  temporarily added to resolve type cast ambiguity of type long int

* src/CGAL/Quotient.h
  where CGAL_long(T) appears
  temporarily added to resolve overloading ambiguity of type long int

* src/CGAL/TDS_full_cell_default_storage_policy.h
  Xor_type xor_of_vertices(const int cur_dim) const
  Vertex_handle mirror_vertex(const int i, const int cur_dim) const
  resolve reference binding to null pointer: '*vertices_[i]' can fetch NULL memory if 'vertices_[i]' corresponds to NULL pointer

* src/CGAL/Triangulation.h
  bool is_infinite(const Vertex & v) const
  resolve reference binding to null pointer: '*infinite_vertex()' can fetch NULL memory if 'infinite_vertex()' corresponds to NULL pointer

* src/CGAL/Uncertain.h
  Uncertain<bool> operator|(Uncertain<bool> a, Uncertain<bool> b)
  Uncertain<bool> operator&(Uncertain<bool> a, Uncertain<bool> b)
  remove bitewise '|' or '&' with boolean operands since CRAN complains them

* src/CGAL/NewKernel_d/function_objects_cartesian.h
  struct Oriented_side
  CS is the name of Intel CPU registers defined on Solaris

* Below are changes due to updating package RcppEigen to Eigen 3.3.2:
  https://github.com/RcppCore/RcppEigen/issues/41
  - now fixed in CGAL 4.13


# Dionysus

* src/geometry/Arbitdistance.h
  remove std::binary_function and provide result_type since std::binary_function is deprecated in C++11 and removed in C++17

* src/geometry/l2distance.h
  remove std::binary_function and provide result_type since std::binary_function is deprecated in C++11 and removed in C++17

* src/geometry/simulator.h
  remove std::binary_function since std::binary_function is deprecated in C++11 and removed in C++17

* src/geometry/weighted-cechdistance.h
  remove std::binary_function since std::binary_function is deprecated in C++11 and removed in C++17

* src/geometry/weighted-l2distance.h
  remove std::binary_function since std::binary_function is deprecated in C++11 and removed in C++17

* src/topology/dynamic-persistence.hpp
  remove std::unary_function since std::unary_function is deprecated in C++11 and removed in C++17

* src/topology/Isvineyard.h
  remove std::unary_function and std::binary_function since std::unary_function and std::binary_function are deprecated in C++11 and removed in C++17

* src/topology/Isvineyard.hpp
  remove std::binary_function since std::binary_function is deprecated in C++11 and removed in C++17

* src/topology/order.h
  remove std::binary_function since std::binary_function is deprecated in C++11 and removed in C++17

* src/topology/rips.hpp
  void bros_kerbosch(...) const (and other places where bros_kerbosch is used)
  line 34, 56, 86, 126, 140, 162, 167, 184, 190: change 'excluded' to 'excludedNext' (where excludedNext = excluded + 1) to prevent overflow and change logic accordingly

  remove std::unary_function and std::binary_function since std::unary_function and std::binary_function are deprecated in C++11 and removed in C++17

* src/topology/simplex.hpp
  Simplex<V,T> dereference() const
  change std::bind2nd() to std::bind() with placeholders since std::bind2nd() is deprecated

* src/utilities/counter.h (and other places where Count(x) is used)
  replace macro Count() by inline function Count()


# GUDHI

* src/gudhi/Alpha_complex.h
  add #include <Rcpp.h> for Rcpp::Rcerr
  replace std::cerr by Rcpp::Rcerr

  auto& get_cache(SimplicialComplexForAlpha& cplx, typename SimplicialComplexForAlpha::Simplex_handle s)
  auto radius(SimplicialComplexForAlpha& cplx, typename SimplicialComplexForAlpha::Simplex_handle s)
  line 316, 333: remove thread_local keywrod due to causing a runtime error on 32 bit

  comment out #include <gudhi/Points_off_io.h> due to Points_off_io.h having std::cerr
  
  comment out Alpha_complex(const std::string& off_file_name) due to std::cerr and exit

//  Alpha_complex& operator= (const Alpha_complex& other)
//  temporarily cancel delete

* src/gudhi/Simplex_tree.h
  comment out #include <gudhi/reader_utils.h> due to reader_utils.h having std::cerr

  std::pair<Simplex_handle, bool> insert_simplex_and_subfaces(const InputVertexRange& Nsimplex, Filtration_value filtration = 0)
  void siblings_expansion(Siblings * siblings, int k)
  line 819, 1205: remove thread_local keywrod due to causing a runtime error on 32 bit

//  Simplex_tree(Simplex_tree && old)
//  line 354-376: temporarily comment out move constructor so that copy constructor is used instead to prevent shallow move

//  bool rec_make_filtration_non_decreasing(Siblings * sib)
//  line 1183: added this to capture clause in lambda function

  Filtration_simplex_range const& filtration_simplex_range(Indexing_tag = Indexing_tag()) const
  add const

  Boundary_simplex_range boundary_simplex_range(SimplexHandle sh) const
  add const

  void rec_copy(Siblings *sib, const Siblings * const sib_source)
  add const
  
  size_t num_simplices() const
  add const
  
  size_t num_simplices(const Siblings * const sib) const
  add const

  int dimension(Simplex_handle sh) const
  add const

  Siblings* self_siblings(const SimplexHandle & sh) const
  add const

* src/gudhi/Persistent_cohomology.h
  void annotation_of_the_boundary(std::map<Simplex_key, Arith_element> & map_a_ds, Simplex_handle sigma, int dim_sigma)
  line 293: remove thread_local keywrod due to causing a runtime error on 32 bit

* src/gudhi/Simplex_tree/Simplex_tree_node_explicit_storage.h
//  Simplex_tree_node_explicit_storage(const Simplex_tree_node_explicit_storage & stnes)
//  line 53-61: added copy constructor

  Siblings * children() const
  line 71-74: changing to const function
  
* src/gudhi/Simplex_tree/Simplex_tree_iterators.h
  class Simplex_tree_simplex_vertex_iterator
  
  Simplex_tree_simplex_vertex_iterator(SimplexTree const* st, const Simplex_handle sh)
  add const

  class Simplex_tree_boundary_simplex_iterator
  
  Simplex_tree_boundary_simplex_iterator(const SimplexTree * const st)
  add const
  
  Simplex_tree_boundary_simplex_iterator(const SimplexTree * const st, const SimplexHandle sh)
  add const

  const SimplexTree * st_
  add const

* src/gudhi/Simplex_tree/Simplex_tree_siblings.h
//  Simplex_tree_siblings(Simplex_tree_siblings * oncles, Vertex_handle parent, const RandomAccessVertexRange & members)
//  temporarily fixed to fix [-Wclass-memaccess] warning

  const Dictionary & members() const
  add const